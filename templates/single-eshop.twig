{% extends "base.twig" %}

{% block breadcrumb %}
	<div class="container">

	</div>
{% endblock %}

{% block content %}
	<div class="container py-5">
		<article>

				<div class="row">

					<div class="col-12 col-md-6">

						{% include 'eshop/main.twig' %}

					</div>
					<div class="col-12 col-md-6">

						{% include 'eshop/screens.twig' with {'thumbnails': post.get_field('screen_thumbnail')} %}

					</div>
				</div>

				<hr style="margin-bottom: 2rem">

				<div class="row">
					<div class="col-12 col-lg-8">

						{% include 'eshop/detail.twig' %}

					</div>
					<div class="col-12 col-lg-4">

						{% include 'eshop/contact.twig' %}

					</div>
				</div>

		</article>
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js"></script>
	<script>

		var humanifyBigNumber = function ($num) {
			if ($num >= 1000) {
				return Math.round($num/1000) + ' tis.';
			} else if ($num >= 1000000) {
				return Math.round($num/1000000) + ' mil.';
			} else {
				return $num;
			}
		};

		var createChart = function (elementId, labels, data, yAxesPostfix) {
			var ctx = document.getElementById(elementId).getContext('2d');
			var chart = new Chart(ctx, {
				type: 'line',
				data: {
					labels: labels,
					datasets: [{
						data: data,
						borderColor: 'rgb(0, 123, 255)',
						backgroundColor: 'rgba(0, 123, 255, .1)',
					}],
				},
				options: {
					legend: {
		        display: false,
		    	},
					scales: {
            yAxes: [{
              ticks: {
                callback: function (value, index, values) {
                  return humanifyBigNumber(value) + ' ' + yAxesPostfix;
                }
              }
            }]
        	},
					tooltips: {
						footerFontStyle: 'normal',
						callbacks: {
							custom: function(tooltip) {
				        if (!tooltip) return;
				        tooltip.displayColors = false; // disable displaying the color box
				      },
							label: function () { return }, // remove colored box with value
							footer: function (item, data) {
								return item[0].yLabel + ' ' + yAxesPostfix;
							},
						},
			    },
				},
			});
		};

		{% if post.get_field('turnover_history')|length > 0 %}
			createChart(
				'eshopTurnoverHistoryChart',
				[{% for point in post.get_field('turnover_history') %}{{ point.year }},{% endfor %}],
				[{% for point in post.get_field('turnover_history') %}{{ point.turnover }},{% endfor %}],
				'Kč',
			);
		{% endif %}

		{% if post.get_field('traffic_history')|length > 0 %}
			createChart(
				'eshopTrafficHistoryChart',
				[{% for point in post.get_field('traffic_history') %}{{ point.year }},{% endfor %}],
				[{% for point in post.get_field('traffic_history') %}{{ point.traffic }},{% endfor %}],
				'UN',
			);
		{% endif %}

	</script>
{% endblock %}
